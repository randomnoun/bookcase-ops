---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus2-pvc
spec:
  storageClassName: "{{ kube_storageclass_nexus2 }}"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ nexus2_volume_size_gb }}Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus2
  template:
    metadata:
      labels:
        app: nexus2
    spec:
      containers:
        - name: nexus2
          image: sonatype/nexus
          resources:
            # memory minimum and maximum. they couldn't call it that though. oh no. requests and limits it is.
            # in k8s, G = power of 10, Gi = power of 2. rather than using 'GB' like everyone else.
            # incidentally, the reason the 80386 added support for virtual memory in 1985 was so that we didn't have to do this sort of thing 
            requests:
              memory: "2Gi"          
            limits:
              memory: "2Gi"
          
          env:
            - name: CONTEXT_PATH
              value: /nexus
            - name: MAX_HEAP
              value: 768m
            - name: MIN_HEAP
              value: 256m
          ports:
            - name: http
              containerPort: 8081
          volumeMounts:
            - name: nexus2-volume
              subPath: sonatype-work
              mountPath: "/sonatype-work"
#          livenessProbe:
#            failureThreshold: 3
#            initialDelaySeconds: 300
#            periodSeconds: 5
#            successThreshold: 1
#            timeoutSeconds: 10
#            httpGet:
#              path: /help
#              port: 80
#              scheme: HTTP
      volumes:
        - name: nexus2-volume
          persistentVolumeClaim:
            claimName: "nexus2-pvc"


---
apiVersion: v1
kind: Service
metadata:
  name: nexus2-service
spec:
  ports:
    - name: http
      port: 8081
      targetPort: 8081
  selector:
    app: nexus2

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata: 
  name: nexus2-tls-secret
  tls.crt: "{{ nexus2_tls_secret_cert }}"
  tls.key: "{{ nexus2_tls_secret_key }}"

---
# apiVersion: extensions/v1beta1
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus2-ingress
  annotations:
# OK, so it's the annotations at https://docs.nginx.com/nginx-ingress-controller/configuration/ingress-resources/advanced-configuration-with-annotations/
# not the annotations at https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/  
    kubernetes.io/ingress.class: "nginx"
    nginx.org/redirect-to-https: "false"
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.org/client-max-body-size: "0"
    nginx.org/proxy-read-timeout: "600s"
    nginx.org/proxy-send-timeout: "600s"
    
spec:
  tls:
    - hosts:
        - {{ nexus2_ingress_host }}
      secretName: nexus2-tls-secret
  rules:
    - host: {{ nexus2_ingress_host }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nexus2-service
                port:
                  name: http
