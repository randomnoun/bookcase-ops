# see https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

#prometheusOperator:
#  resources:
#    requests:
#      cpu: 200m
#      memory: 200Mi
#    limits:
#      memory: 250Mi

prometheus:
  prometheusSpec:
    retention: "{{ prometheus_retention }}"
    externalLabels:
      # This helps thanos distinguish between metrics from different prometheus instances
      cluster: "{{ prometheus_deployment_name }}"
    podMonitorSelector:
      matchLabels:
        prometheus: default
    podMonitorNamespaceSelector:
      matchLabels:
        prometheusEnabled: 'true'

    serviceMonitorSelector:
      matchLabels:
        prometheus: default
    serviceMonitorNamespaceSelector:
      matchLabels:
        prometheusEnabled: 'true'
    ruleSelector:
      matchLabels:
        prometheus: default
    ruleNamespaceSelector:
      matchLabels:
        prometheusEnabled: 'true'
        
#    resources:
#      requests:
#        cpu: 100m
#        memory: { { prometheus_memory_request } }
#      limits:
#        memory: { { prometheus_memory_limit } }                 
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: {{ kube_storageclass_prometheus }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ prometheus_volume_size_gb }}Gi"
  ingress:
    enabled: true
#    ingressClassName: {{ prometheus_ingress_class }}
    annotations:
      kubernetes.io/ingress.class: "nginx"
    hosts:
      - {{ prometheus_ingress_host }}
    tls:
      - secretName: prometheus-tls-secret
        hosts:
          - {{ prometheus_ingress_host }}
          
alertmanager:
  # note different key to 'server' above
  alertManagerSpec:
#    resources:
#      requests:
#        cpu: 100m
#        memory: { { alertmanager_memory_request } }
#      limits:
#        memory: { { alertmanager_memory_limit } }
    # note different key to 'storageSpec' above
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ kube_storageclass_prometheus }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ alertmanager_volume_size_gb }}Gi"
  ingress:
    enabled: true
#    ingressClassName: {{ prometheus_ingress_class }}
    annotations:
      kubernetes.io/ingress.class: "nginx"
    hosts:
      - {{ alertmanager_ingress_host }}
    paths:
      - /
    tls:
      - secretName: alertmanager-tls-secret
        hosts:
          - {{ alertmanager_ingress_host }}
  

grafana:
  enabled: false


